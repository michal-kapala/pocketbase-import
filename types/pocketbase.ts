/**
 * All the Pocketbase types supported by this tool.
 */
export const POCKETBASE_TYPE = {
  BOOL: "bool",
  NUMBER: "number",
  PLAIN_TEXT: "text",
  EMAIL: "email",
  JSON: "json",
  DATETIME: "date",
  URL: "url",
} as const;

type ObjectValues<T> = T[keyof T];

/**
 * Supported Pocketbase data types.
 */
export type PocketbaseType = ObjectValues<typeof POCKETBASE_TYPE>;

/**
 * A row type schema for column value parsing.
 */
export type PocketbaseRowSchema = {
  [key: string]: PocketbaseType;
};

/**
 * PocketBase system fields with autogenerated values that cannot be overriden (`base` collection type).
 */
export const POCKETBASE_SYSFIELD = [
  "id",
  "created",
  "updated",
];

export type Options = {
  [key: string]: any;
};

export type SchemaField = {
  id?: string;
  name: string;
  type: PocketbaseType;
  required: boolean;
  system: boolean;
  presentable: boolean;
  unique: boolean;
  options: Options;
};

export type Collection = {
  id?: string;
  name: string;
  type: string;
  system: boolean;
  schema: SchemaField[];
  indexes: string[];
  listRule: string | null;
  viewRule: string |null;
  createRule: string |null;
  updateRule: string |null;
  deleteRule: string |null;
  options: Options;
};
